=======================
single comment file
=======================
% Hello, world!
---
(source_file
  (comment))

=======================
Multi-line comment
=======================
%%%%%%%%%%%%%%%%%%%%%%%%
% Hello, world!
%%%%%%%%%%%%%%%%%%%%%%%%
---
(source_file
  (comment)
  (comment)
  (comment))

===================
comment before file
===================
% This file has grammar rules
grammar
type, t :: 't_' ::=
---
(source_file
  (comment)
  (grammar_rule
    (id_desc
      (id))
    (id_desc
      (id))
    (namespace_prefix)))

===================
comment before and after file
===================
% This file has grammar rules
grammar
type, t :: 't_' ::=
% todo
---
(source_file
  (comment)
  (grammar_rule
    (id_desc
      (id))
    (id_desc
      (id))
    (namespace_prefix))
  (comment))

===================
Comment at the end of a line
===================
grammar
type, t :: 't_' ::= % finish this later
---
(source_file
  (grammar_rule
    (id_desc
      (id))
    (id_desc
      (id))
    (namespace_prefix))
  (comment))

==================================
Comment in between rule lines
==================================
defns
typing :: 'ty_' ::=

defn
|- psi ::  :: psi_wf :: 'psi_wf_'
by

gg |- z1
gg |- z2
% TODO: does z3 need to be well-formed?
gg |- z3
---------------- :: Combo
|- z1 o z2 ~ z3

---
(source_file
  (defnclass
    class_name: (string)
    namespace_prefix: (namespace_prefix)
    definition: (defn
      element: (element)
      element: (element)
      definition_name: (string)
      namespace_prefix: (namespace_prefix)
      definition_rule: (defn_rule
        premise: (rule_line)
        premise: (rule_line)
        (comment)
        premise: (rule_line)
        separator: (rule_separator
          line: (dash_line)
          rule_name: (string))
        conclusion: (rule_line)))))

==================================
Comment after 'by' token
==================================
defns
typing :: 'ty_' ::=

defn
|- psi ::  :: psi_wf :: 'psi_wf_'
by % Add more rules later

---------------- :: Combo
|- z1 o z2 ~ z3

---
(source_file
  (defnclass
    class_name: (string)
    namespace_prefix: (namespace_prefix)
    definition: (defn
      element: (element)
      element: (element)
      definition_name: (string)
      namespace_prefix: (namespace_prefix)
      (comment)
      definition_rule: (defn_rule
        separator: (rule_separator
          line: (dash_line)
          rule_name: (string))
        conclusion: (rule_line)))))
